/*this is a comment*/
/* 1em = 16px*/

/* THE SYNTAX OF CSS is 
selector{
property:value;
}*/

/*the selector is the "who", the property is the "what", and the value is "how" with changes to CSS*/

/*** CLASS SELECTOR (attribute) EXAMPLE***/
.psycheboost{
    color: skyblue;
  }
  .introtwo{
    background-color:pink;
  }
  
  
  /******* ID SELECTOR (attribute) EXAMLPLE***/
  #intro{
    color: orange;
  }
  
    /****The Box Model***
    
    padding: 0;  Padding creates extra space WITHIN an element.
    
    
    border:0; Border is just that a border around an a element. Can be further customized with attributes
    
    margin:0; Margins create extra space AROUND an element, unlike padding.
    
    
    /******Colored Table*****/
  .grey{
    background-color: grey;
  }
  .green{
    background-color: green;
    }
  .purple{
    background-color: purple;
  }
  
  caption {
      padding: 8px;
      caption-side: bottom;
      color: brown;
  }
  
  table {
      border-collapse: collapse;
      border: 1px solid;
      letter-spacing: 1px;
      font-family: sans-serif;
  }
  
  td,
  th {
      border: 1px solid rgb(100, 100, 100);
      padding: 10px 10px;
  
  }
  
  td {
      text-align: center;
   }
  
  
  div{
    background-color:red;
  }
  span{
    color:yellow;
    border-style: solid;
  }
  .parenttut{
    color:blue;
  }
    
  
  
  
  /***Display property****************
    Block can change width but cant be inline
    
    Inline will sit next to one another but cant change width
    
    Block-inline is the best of both worlds, sits inline with a variable width.
    
    None - "hides" the element*******/
    
    
  /***** CSS Positioning****
  
    STATIC- Default
    
    RELATIVE- means positioned relative to its normal position.
   
    Setting the top, right, bottom, and left properties of a relatively-positioned element will cause it to be moved away from its normal position. Other content will not be adjusted to fit into any gap left by the element.
   
    
    ABSOLUTE- is positioned relative to the nearest positioned parent instead of positioned relative to the viewport(screen), like fixed.
  
  However if an absolute positioned element has no positioned ancestors(parent), it uses the document body, and moves along with page scrolling.
  
  Reminder Absolute positioned elements are removed from the normal flow, and can overlap elements.
    
    
    FIXED - elements positioned relative to the screen, which means it always stays in the same place even if the page is scrolled. The top, right, bottom, and left properties are used to position the element.
  
  A fixed element does not leave a gap in the page where it would normally have been located.
    
    
    
    STICKY- Sticky elements are positioned based on the user's scroll position.
  
  A sticky element toggles between relative and fixed, depending on the scroll position. It is positioned relative until a given offset position is met in the viewport - then it "sticks" in place (example: ads that stay on screen even once you scroll past)
    
    **/
    